name: Docker

on:
  push:
    branches: [gke]
  pull_request:
    branches: [gke]

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: ${{ secrets.CLUSTER_ID }} # TODO: update to cluster name
  GKE_ZONE: ${{ secrets.CLUSTER_ZONE }} # TODO: update to cluster zone
  DEPLOYMENT_NAME: "fastapi-demo" # T
  IMAGE_NAME: gcr.io/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_APP_NAME }}

jobs:
    deploy:
        name: Setup Gcloud Account
        runs-on: ubuntu-latest          
        steps:
        - name: Login
          uses: google-github-actions/setup-gcloud@v0
          with:
            project_id: ${{ secrets.GCP_PROJECT_ID }}
            service_account_email: ${{ secrets.GCP_EMAIL }}
            service_account_key: ${{ secrets.GCP_CREDENTIALS }}

        - name: Configure Docker
          run: gcloud auth configure-docker --quiet

        - name: Checkout repository
          uses: actions/checkout@v2

        - name: Build Docker image
          run: docker build . -t $IMAGE_NAME

        - name: Push Docker image
          run: docker push $IMAGE_NAME
        
        - name: Set up GKE credentials
          run: |-
            gcloud container clusters get-credentials "$GKE_CLUSTER" --zone "$GKE_ZONE"

        - name: Set up Kustomize
          run: |-
            curl -sfLo kustomize https://github.com/kubernetes-sigs/kustomize/releases/download/v3.1.0/kustomize_3.1.0_linux_amd64
            chmod u+x ./kustomize
        # Deploy the Docker image to the GKE cluster
        - name: Deploy
          run: |-
            # replacing the image name in the k8s template
            ./kustomize edit set image LOCATION-docker.pkg.dev/PROJECT_ID/REPOSITORY/IMAGE=$IMAGE_NAME
            ./kustomize build . | kubectl apply -f -
            kubectl rollout status deployment/$DEPLOYMENT_NAME
            kubectl get services -o wide
              
        # - name: Deploy Docker image
        #   run: gcloud run deploy ${{ secrets.GCP_PROJECT_ID }}  --region us-central1  --image $IMAGE_NAME --platform managed  --set-env-vars "SECRET_KEY=${{secrets.SECRET_KEY}}"  --set-env-vars "ACCESS_TOKEN_EXPIRE_MINUTES=${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}"  --set-env-vars "ALGORITHM=${{secrets.ALGORITHM}}" 
